name: Deploy System

on:
  push:
    branches: [ main ]

jobs:
  deploy-worker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: ''

      - name: Install worker dependencies
        working-directory: worker
        run: |
          npm install bcryptjs
          npm list bcryptjs

      - name: Generate password hash
        id: hash_password
        working-directory: worker
        run: |
          export PEPPER="${{ secrets.PEPPER }}"
          export PASSWORD="${{ secrets.ADMIN_PASSWORD }}"
          
          HASH=$(node -e "
            const bcrypt = require('bcryptjs');
            const hash = bcrypt.hashSync(
              process.env.PASSWORD + process.env.PEPPER , 
              10
            );
            console.log(hash);
          ")
          
          echo "HASH_OUTPUT=$HASH" >> $GITHUB_OUTPUT

      - name: Install Wrangler
        run: |
          npm install -g wrangler@4.18.0
          wrangler --version

      - name: Refresh Cloudflare permissions
        run: |
          curl -X POST "https://api.cloudflare.com/client/v4/user/tokens/permission_refresh" \
            -H "Authorization: Bearer $CLOUDFLARE_API_TOKEN"
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

      - name: Deploy to Cloudflare Worker
        working-directory: worker
        run: |
          wrangler secret put SECRET_ADMIN_USERNAME  <<< "$ADMIN_USERNAME"
          wrangler secret put SECRET_ADMIN_PASSWORD_HASH <<< "$ADMIN_PASSWORD_HASH"
          wrangler secret put SECRET_PEPPER  <<< "$PEPPER"
          wrangler deploy --minify --legacy-env false --compatibility-date=2024-01-01
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
          ADMIN_PASSWORD_HASH: ${{ steps.hash_password.outputs.HASH_OUTPUT }}
          PEPPER: ${{ secrets.PEPPER }}

  deploy-pages:
    needs: deploy-worker
    runs-on: ubuntu-latest
    # 添加权限声明
    permissions:
      contents: write  # 允许写入内容
      pages: write     # 允许写入GitHub Pages
      id-token: write  # 允许使用OIDC令牌
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
